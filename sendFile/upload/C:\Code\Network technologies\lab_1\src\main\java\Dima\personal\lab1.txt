package runnables;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;

public class Sender {
    private String group;
    private MulticastSocket ms;

    public Sender(String group) throws IOException {
        this.group = group;
        ms = new MulticastSocket();
    }

    public void send(String message, int port) throws IOException {
        ms.send(new DatagramPacket(message.getBytes(), message.length(), InetAddress.getByName(group), port));
    }

    public void closeSocket() {
        ms.close();
    }


    public static void main(String[] args) throws IOException {

        Sender sender = new Sender(args[0]);

        sender.send("Hello everyone!", 5000);

        sender.closeSocket();
    }
}










package runnables;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;

public class Receiver {
    private String group;
    private MulticastSocket ms;

    public Receiver(String group) throws IOException {
        this.group = group;
        ms = new MulticastSocket(5000);
        ms.joinGroup(InetAddress.getByName(group));
    }

    public String receive() throws IOException {
        byte byf[] = new byte[1024];

        DatagramPacket dp = new DatagramPacket(byf, 1024);
        ms.receive(dp);

        return new String(dp.getData(), 0, dp.getLength());
    }


    public void close() throws IOException {
        ms.leaveGroup(InetAddress.getByName(group));
        ms.close();
    }

    public static void main(String[] args) throws IOException {

        Receiver receiver = new Receiver(args[0]);

        String message = receiver.receive();
        System.out.println(message);

        receiver.close();
    }

}

//226.1.2.3